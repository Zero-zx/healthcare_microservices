# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

# Upstream definitions
upstream user {
    server user_service:8000;
}

upstream doctor {
    server doctor_service:8000;
}

upstream patient {
    server patient-service:8000;
}

upstream appointment {
    server appointment_service:8000;
}

upstream laboratory {
    server laboratory_service:8000;
}

upstream chatbot {
    server chatbot_service:8000;
}

server {
    listen 8000;
    server_name localhost;

    # Root location - simple API gateway message
    location = / {
        default_type application/json;
        return 200 '{"message": "Healthcare Microservices API Gateway", "status": "running"}';
    }

    # Global CORS handling
    location / {
        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Handle OPTIONS method
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Default proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Core Services
    location /api/users/ {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://user;
    }

    # Main Healthcare Services
    location /api/doctors/ {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://doctor;
    }

    location /api/patients/ {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://patient;
    }

    location /api/appointments/ {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://appointment;
    }

    location /api/laboratory/ {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://laboratory;
    }

    location /api/chatbot/ {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://chatbot;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 'healthy\n';
    }

    # Error handling
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
}